version: '2.1'

volumes:
    broker: {}
    app: {}
    postgres_data: {}

services:
  rabbitmq:
    image: healthcheck/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: mayan
      RABBITMQ_DEFAULT_PASS: mayan
      RABBITMQ_DEFAULT_VHOST: mayan
    restart: unless-stopped
    volumes:
      - broker:/var/lib/rabbitmq

  redis:
    command:
      - redis-server
      - --databases
      - "2"
      - --maxmemory-policy
      - allkeys-lru
      - --save
      - ""
    image: redis:5.0-alpine
    restart: unless-stopped

  postgresql:
    image: postgres:11
    environment:
      POSTGRES_DB: mayan
      POSTGRES_PASSWORD: mayan
      POSTGRES_USER: mayan
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data

  mayan-edms:
    image: mayanedms/mayanedms
    networks:
      - default
      - web
      - ldap
    external_links:
      - ldap
    depends_on:
      - rabbitmq
      - redis
      - postgresql
    environment: &mayan_env
      MAYAN_USER_UID: 1042
      MAYAN_USER_GID: 1042
      MAYAN_APT_INSTALLS: >
        tesseract-ocr-deu
        tesseract-ocr-swe
        build-essential
        python3-dev
        gcc
        libldap2-dev
        libsasl2-dev
        libssl-dev
      MAYAN_PIP_INSTALLS: >
        python-ldap
        django-auth-ldap
      MAYAN_CELERY_BROKER_URL: amqp://mayan:mayan@rabbitmq:5672/mayan
      # MAYAN_CELERY_BROKER_URL: redis://redis:6379/0
      MAYAN_CELERY_RESULT_BACKEND: redis://redis:6379/1
      MAYAN_DATABASES: "{'default':{'ENGINE':'django.db.backends.postgresql','NAME':'mayan','PASSWORD':'mayan','USER':'mayan','HOST':'postgresql'}}"
      MAYAN_SETTINGS_MODULE: mayan_settings.ldap_connection_settings
      MAYAN_DOCUMENTS_LANGUAGE_CODES: (('deu', 'German'), ('eng', 'English'), ('swe', 'Swedish'))
      MAYAN_DOCUMENTS_LANGUAGE: 'deu'
      MAYAN_SEARCH_BACKEND: 'mayan.apps.dynamic_search.backends.whoosh.WhooshSearchBackend'
      VIRTUAL_HOST: mayan.zfix.org,mayan.mrksr.de
      CERT_NAME: shared
    entrypoint:
      # NOTE(mrksr): Mayan wants to chown the settings files. To keep them
      # read-only on the outside we copy them to the volume and let Mayan do
      # its thing.
      - sh
      - -c
      - 'cp /mrksr/* /var/lib/mayan/mayan_settings; exec entrypoint.sh run_all'
    expose:
      - "8000"
    volumes:
      - app:/var/lib/mayan
      - ./ldap_connection_settings.py:/mrksr/ldap_connection_settings.py:ro
      - /srv/syncthing/data/mayan:/syncthing

networks:
  web:
    external:
      name: nginx_default
  ldap:
    external:
      name: ldap_default
